// This file was generated by a tool; you should avoid making direct changes.
// Consider using 'partial classes' to extend these types
// Input: test.proto

#pragma warning disable CS1591, CS0612, CS3021, IDE1006
namespace Cfg
{

    [global::ProtoBuf.ProtoContract()]
    public partial class Vector2 : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(1, Name = @"x", IsRequired = true)]
        public float X { get; set; }

        [global::ProtoBuf.ProtoMember(2, Name = @"y", IsRequired = true)]
        public float Y { get; set; }

    }

    [global::ProtoBuf.ProtoContract()]
    public partial class Vector3 : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(1, Name = @"x", IsRequired = true)]
        public float X { get; set; }

        [global::ProtoBuf.ProtoMember(2, Name = @"y", IsRequired = true)]
        public float Y { get; set; }

        [global::ProtoBuf.ProtoMember(3, Name = @"z", IsRequired = true)]
        public float Z { get; set; }

    }

    [global::ProtoBuf.ProtoContract()]
    public partial class Vector4 : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(1, Name = @"x", IsRequired = true)]
        public float X { get; set; }

        [global::ProtoBuf.ProtoMember(2, Name = @"y", IsRequired = true)]
        public float Y { get; set; }

        [global::ProtoBuf.ProtoMember(3, Name = @"z", IsRequired = true)]
        public float Z { get; set; }

        [global::ProtoBuf.ProtoMember(4, Name = @"w", IsRequired = true)]
        public float W { get; set; }

    }

    [global::ProtoBuf.ProtoContract()]
    public partial class DatasEquip : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(1)]
        public DatasWeapon Weapon { get; set; }

    }

    [global::ProtoBuf.ProtoContract()]
    public partial class DatasWeapon : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(1, IsRequired = true)]
        public int Id { get; set; }

        [global::ProtoBuf.ProtoMember(2, IsRequired = true)]
        public ConstantsColor Color { get; set; } = ConstantsColor.ConstantsColorWhite;

        [global::ProtoBuf.ProtoMember(3, IsRequired = true)]
        public ConstantsQuality Quality { get; set; } = ConstantsQuality.ConstantsQualityHighest;

        [global::ProtoBuf.ProtoMember(4, IsRequired = true)]
        public string Name { get; set; }

        [global::ProtoBuf.ProtoMember(5, Name = @"ATK", IsRequired = true)]
        public int Atk { get; set; }

        [global::ProtoBuf.ProtoMember(6, Name = @"DEF", IsRequired = true)]
        public int Def { get; set; }

        [global::ProtoBuf.ProtoMember(7, Name = @"SPD", IsRequired = true)]
        public int Spd { get; set; }

    }

    [global::ProtoBuf.ProtoContract()]
    public partial class Weapon : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(1, Name = @"data_list")]
        public global::System.Collections.Generic.List<DatasWeapon> DataLists { get; } = new global::System.Collections.Generic.List<DatasWeapon>();

    }

    [global::ProtoBuf.ProtoContract()]
    public enum ConstantsColor
    {
        [global::ProtoBuf.ProtoEnum(Name = @"ConstantsColor_White")]
        ConstantsColorWhite = 1,
        [global::ProtoBuf.ProtoEnum(Name = @"ConstantsColor_Black")]
        ConstantsColorBlack = 2,
        [global::ProtoBuf.ProtoEnum(Name = @"ConstantsColor_Blue")]
        ConstantsColorBlue = 3,
        [global::ProtoBuf.ProtoEnum(Name = @"ConstantsColor_Red")]
        ConstantsColorRed = 4,
    }

    [global::ProtoBuf.ProtoContract()]
    public enum ConstantsQuality
    {
        [global::ProtoBuf.ProtoEnum(Name = @"ConstantsQuality_Highest")]
        ConstantsQualityHighest = 1,
        [global::ProtoBuf.ProtoEnum(Name = @"ConstantsQuality_Unique")]
        ConstantsQualityUnique = 2,
        [global::ProtoBuf.ProtoEnum(Name = @"ConstantsQuality_Normal")]
        ConstantsQualityNormal = 4,
        [global::ProtoBuf.ProtoEnum(Name = @"ConstantsQuality_Enchanted")]
        ConstantsQualityEnchanted = 8,
        [global::ProtoBuf.ProtoEnum(Name = @"ConstantsQuality_EnchantedUnique")]
        ConstantsQualityEnchantedUnique = 10,
        [global::ProtoBuf.ProtoEnum(Name = @"ConstantsQuality_EnchantedNormal")]
        ConstantsQualityEnchantedNormal = 12,
    }

}

#pragma warning restore CS1591, CS0612, CS3021, IDE1006
